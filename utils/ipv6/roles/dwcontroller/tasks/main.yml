---
# tasks file for dwcontroller
- name: Retrieve minimal GPDB configure packages
  yum:
    name:
      - apr-util-devel
      - bzip2-devel
      - gcc
      - gcc-c++
      - git
      - libcurl-devel
      - libevent-devel
    state: present

- name: Checkout GPDB Open Source repository
  become: yes
  become_user: centos
  git:
    repo: 'https://github.com/greenplum-db/gpdb.git'
    dest: /home/centos/gpdb
    version: 6.11.2

- name: Run minimal GPDB configure
  become: yes
  become_user: centos
  shell: |
    cd gpdb
    ./configure --disable-orca --disable-gpcloud --without-readline --without-zlib --without-zstd
  args:
    creates: gpdb/GNUmakefile

- name: Retrieve Python package installer (pip)
  get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /home/centos/get-pip.py

- name: Install Behave test environment into GPDB installation
  shell: |
    source /usr/local/greenplum-db/greenplum_path.sh
    python get-pip.py
    $GPHOME/ext/python/bin/pip --retries 10 install --ignore-installed --prefix $GPHOME/ext/python/ -r /home/centos/gpdb/gpMgmt/requirements-dev.txt
  args:
    creates: /usr/local/greenplum-db/ext/python/bin/behave

- name: Create /data/gpdb directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  loop:
    - /data/gpdb/master

- name: Generate IPv4 gpinitsystem configuration file (gpinitsystem_config.ipv4)
  tags:
    - gpinit
  template:
    src: "{{ role_path }}/templates/gpinitsystem_config"
    dest: "gpinitsystem_config.ipv4"
    owner: centos
    group: centos
  vars:
    ip_network_protocol: ipv4
  when: true

- name: Generate IPv6 gpinitsystem configuration file (gpinitsystem_config.ipv6)
  tags:
    - gpinit
  template:
    src: "{{ role_path }}/templates/gpinitsystem_config"
    dest: "gpinitsystem_config.ipv6"
    owner: centos
    group: centos
  vars:
    ip_network_protocol: ipv6
  when: true

- name: Copy GP All hosts IPv4 (gp_all_hosts_ipv4)
  copy:
    src: files/gp_all_hosts_ipv4
    dest: /home/{{ ansible_user }}/gp_all_hosts_ipv4
    owner: centos
    group: centos
    mode: '0600'

- name: Copy GP Segment hosts IPv4 (gp_segment_hosts_ipv4)
  copy:
    src: files/gp_segment_hosts_ipv4
    dest: /home/{{ ansible_user }}/gp_segment_hosts_ipv4
    owner: centos
    group: centos
    mode: '0600'

- name: Copy GP All hosts IPv6 (gp_all_hosts_ipv6)
  copy:
    src: files/gp_all_hosts_ipv6
    dest: /home/{{ ansible_user }}/gp_all_hosts_ipv6
    owner: centos
    group: centos
    mode: '0600'

- name: Copy GP Segment hosts IPv6 (gp_segment_hosts_ipv6)
  copy:
    src: files/gp_segment_hosts_ipv6
    dest: /home/{{ ansible_user }}/gp_segment_hosts_ipv6
    owner: centos
    group: centos
    mode: '0600'
